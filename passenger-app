#!/bin/bash

warn () { echo -e "$1" >&2; }

usage() {
  cat <<EOD
Usage: passenger-app <app> <command> [<args>]

Commands:
   start     Start application <app>
   reload    Reload application <app>
   stop      Stop application <app>
   restart   Restart application <app>
   status    Run passenger-status with <args>
   config    Run passenger-config with <args>
EOD
}

# These files can override the default settings. They can also set
# environment values like PATH and GEM_HOME. The default for
# ruby_switcher is rbfu for backward compatibility with the
# original distribution of passenger-systemd. Set ruby_switcher
# to "none" to rely on the PATH setting alone.
[ -e /etc/passenger-app.rc ] && . /etc/passenger-app.rc
[ -e $HOME/.passenger-app.rc ] && . $HOME/.passenger-app.rc

if [ -z "$ruby_switcher" ]; then
    ruby_switcher="rbfu"
elif [ "$ruby_switcher" = "none" ]; then
    ruby_switcher=""
fi

config() {
  exec $ruby_switcher passenger-config "$@"
}

status() {
  exec $ruby_switcher passenger-status "$@"
}

start() {
  cd "$APPDIR"
  exec $ruby_switcher passenger start current --daemonize --instance-registry-dir ${PASSENGER_INSTANCE_REGISTRY_DIR} --engine builtin --socket ${PASSENGER_INSTANCE_REGISTRY_DIR}/app.sock --pid-file ${PASSENGER_INSTANCE_REGISTRY_DIR}/app.pid --log-file ${APPDIR}/shared/log/passenger.log --environment production
}

reload() {
  exec /usr/bin/touch ${APPDIR}/shared/tmp/restart.txt
}

stop() {
  exec $ruby_switcher passenger stop --pid-file ${PASSENGER_INSTANCE_REGISTRY_DIR}/app.pid
}

restart() {
  echo "Shutting down application ..."
  $ruby_switcher passenger stop --pid-file ${PASSENGER_INSTANCE_REGISTRY_DIR}/app.pid
  sleep 5
  start
}

APP=$1; shift
ACTION=$1; shift

# sanity checks
[ ! "$APP" ] && warn "Please specify the application to use" && exit 1

if [ "$APP" == "--help" ]; then
  usage && exit 0
fi

if [ ! -n "$PASSENGER_APPS_ROOT" ]; then
  PASSENGER_APPS_ROOT="/srv/apps"
fi

if [ ! -d "$PASSENGER_APPS_ROOT" ]; then
  warn "Passenger applications root not found at $PASSENGER_APPS_ROOT"
  warn "Check the PASSENGER_APPS_ROOT environment variable"
  exit 1
fi

APPDIR="$PASSENGER_APPS_ROOT/$APP"
if [ ! -d "$APPDIR" ]; then
  warn "Application $APP not found at $APPDIR"
  exit 1
fi

PASSENGER_INSTANCE_REGISTRY_DIR="$APPDIR/passenger"
if [ ! -d "$PASSENGER_INSTANCE_REGISTRY_DIR" ]; then
  warn "Passenger instance registry not found at $PASSENGER_INSTANCE_REGISTRY_DIR"
  exit 1
fi

# TODO: check env variables

export PATH
export GEM_HOME
export GEM_PATH
export PASSENGER_ROOT
export PASSENGER_INSTANCE_REGISTRY_DIR
export RUBY_VERSION_DIR="$APPDIR/current"

case "$ACTION" in
  help)
    usage && exit 0
  ;;
  start)
    start
  ;;
  reload)
    reload
  ;;
  stop)
    stop
  ;;
  restart)
    restart
  ;;
  status)
    status $@
  ;;
  config)
    config $@
  ;;
  *)
    usage && exit 1
  ;;
esac
